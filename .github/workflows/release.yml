name: Release

on:
  release:
    types: [created]
  workflow_dispatch:        # Allow manual triggering

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  linux-build:
    needs: tests
    # Skip build job on pull requests if they come from forks
    # This saves CI minutes while still running tests
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch:   amd64
            cc:     gcc

          - arch:   amd64
            cc:     gcc
            static: true

          - arch: arm64
            cc:   aarch64-linux-gnu-gcc

          - arch: arm64
            cc:   aarch64-linux-gnu-gcc
            static: true
          - arch: arm
            arm:  6
            cc:   arm-linux-gnueabi-gcc

          - arch: arm
            arm:  6
            cc:   arm-linux-gnueabi-gcc
            static: true

          - arch: arm
            arm:  7
            cc:   arm-linux-gnueabihf-gcc

          - arch: arm
            arm:  7
            cc:   arm-linux-gnueabihf-gcc
            static: true
    env:
      GOOS:   linux
      GOARCH: ${{ matrix.arch }}
      GOARM:  ${{ matrix.arm }}
      CC:     ${{ matrix.cc }}
      LDFLAGS: ${{ matrix.static && '-extldflags "-static"' || '' }}
      SUFFIX: "${{ matrix.static && '-static' || ''}}"
      VERSION: "${{ github.event_name == 'release' && github.event.release.name || github.sha }}"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.24.0'
          check-latest: true

      - name: Install cross-compilers
        run: |
          sudo apt-get update 
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf gcc-arm-linux-gnueabi

      - name: Build harmonylite
        run: |
          VERSION="${{ env.VERSION }}" \
          GIT_COMMIT="${{ github.sha }}" \
          GIT_TAG="${{ github.ref_name }}" \
          PLATFORM="${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOARM }}" \
          CGO_ENABLED=1 \
          make build
          
          tar -czvf harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOARM }}${{ env.SUFFIX }}.tar.gz harmonylite config.toml LICENSE README.md examples/*

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOARM }}${{ env.SUFFIX }}.tar.gz
          path: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOARM }}${{ env.SUFFIX }}.tar.gz
          if-no-files-found: error

      - name: Get release
        id: release
        uses: bruceadams/get-release@v1.2.3
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload release tarball
        uses: actions/upload-release-asset@v1.0.2
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOARM }}${{ env.SUFFIX }}.tar.gz
          asset_name: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOARM }}${{ env.SUFFIX }}.tar.gz
          asset_content_type: application/gzip
          
  mac-build:
    needs: tests
    # Skip build job on pull requests if they come from forks
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - arch: arm64
            cc: gcc

          - arch: amd64
            cc: gcc
    env:
      GOOS: darwin
      GOARCH: ${{ matrix.arch }}
      CC: ${{ matrix.cc }}
      LDFLAGS: ${{ matrix.static && '-extldflags "-static"' || '' }}
      SUFFIX: "${{ matrix.static && '-static' || ''}}"
      VERSION: "${{ github.event_name == 'release' && github.event.release.name || github.sha }}"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.24.0'
          check-latest: true

      - name: Build harmonylite
        run: |
          VERSION="${{ env.VERSION }}" \
          GIT_COMMIT="${{ github.sha }}" \
          GIT_TAG="${{ github.ref_name }}" \
          PLATFORM="${{ env.GOOS }}-${{ env.GOARCH }}" \
          CGO_ENABLED=1 \
          make build
          
          tar -czvf harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.SUFFIX }}.tar.gz harmonylite config.toml LICENSE README.md examples/*

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.SUFFIX }}.tar.gz
          path: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.SUFFIX }}.tar.gz
          if-no-files-found: error

      - name: Get release
        id: release
        uses: bruceadams/get-release@v1.3.2
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload release tarball
        uses: actions/upload-release-asset@v1.0.2
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.SUFFIX }}.tar.gz
          asset_name: harmonylite-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.SUFFIX }}.tar.gz
          asset_content_type: application/gzip